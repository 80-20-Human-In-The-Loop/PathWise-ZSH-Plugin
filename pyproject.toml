[project]
name = "pathwise"
version = "1.0.0"
description = "PathWise - Intelligent Zsh plugin for directory tracking, time monitoring, and git insights"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "GPL-3.0"}
authors = [
    {name = "PathWise Contributors"}
]
keywords = ["zsh", "plugin", "directory", "tracking", "productivity", "git"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Shells",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/yourusername/pathwise"
Documentation = "https://github.com/yourusername/pathwise/blob/main/README.md"
Issues = "https://github.com/yourusername/pathwise/issues"

[tool.mypy]
# Strict mode for maximum type safety
strict = true
python_version = "3.10"

# Additional strict options
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Output options
pretty = false
show_error_codes = true
show_error_context = true
show_column_numbers = true

# Files to check
files = [
    "build_plugin.py",
    "python/"
]

# Ignore missing imports for third-party libraries
ignore_missing_imports = true

[tool.ruff]
# Line length to match common displays
line-length = 100

# Python version target
target-version = "py310"

# Files to include/exclude
include = ["*.py", "*.pyi", "**/pyproject.toml"]
exclude = [
    "*.egg",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
# Rule selection
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "B",      # flake8-bugbear
    "W",      # pycodestyle warnings
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    "S",      # flake8-bandit (security)
    "FBT",    # flake8-boolean-trap
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PT",     # flake8-pytest-style
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate (commented code)
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "TRY",    # tryceratops
    "RUF",    # ruff-specific rules
]

# Rules to ignore
ignore = [
    "S101",    # Use of assert detected
    "T20",     # Don't remove print statements in build script
    "PLR2004", # Magic value used in comparison
    "PLR0913", # Too many arguments to function call
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow these names even though they don't follow convention
[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
known-first-party = ["python"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
# Allow constants in functions
classmethod-decorators = ["classmethod"]

[tool.ruff.lint.per-file-ignores]
# Allow print statements, less strict typing, and long lines in shell generation
"build_plugin.py" = ["T201", "T203", "ANN", "E501"]
# Allow assertions in test files (when they exist)
"test_*.py" = ["S101", "ANN"]

[tool.black]
line-length = 80
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff.format]
# Format preferences
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Documentation style
docstring-code-format = true
docstring-code-line-length = "dynamic"